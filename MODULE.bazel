module(
    name = "poc-renovate-tool-mangement",
    version = "0.1",
    compatibility_level = 1,
)

bazel_dep(name = "rules_java", version = "8.3.1")
bazel_dep(name = "rules_jvm_external", version = "6.0")
bazel_dep(name = "rules_oci", version = "1.7.2")
bazel_dep(name = "rules_pkg", version = "0.9.1")
bazel_dep(name = "aspect_bazel_lib", version = "2.7.0")

SPRING_BOOT_VERSION = "3.3.7"

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    name = "maven",
    artifacts = [
        "org.springframework.boot:spring-boot-starter:%s" % SPRING_BOOT_VERSION,
        "org.springframework.boot:spring-boot-starter-web:%s" % SPRING_BOOT_VERSION,
        "com.fasterxml.jackson.core:jackson-annotations:2.2.4",
        "com.fasterxml.jackson.core:jackson-databind:2.2.4",
    ],
    fail_if_repin_required = True,
    fetch_sources = True,
    lock_file = "//:rules_jvm_external~~maven~maven_install.json",
    repositories = [
        "https://repo.maven.apache.org/maven2/",
    ],
)
use_repo(maven, "maven")

# Configure OCI (Docker) repositories
oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")

# Pull the Java base image for ARM64 (M1 Mac)
oci.pull(
    name = "java_base",
    digest = "sha256:3718cf143b7aaec37742a61f49aba0ac9d67508e32cd98aaca0d6af422c05a31",  # ARM64 digest
    image = "amazoncorretto",
    platforms = [
        "linux/amd64",
        "linux/arm64/v8",
    ],
)
use_repo(oci, "java_base")
